.\" Man page for MailLogSentinel
.\" Contact monozoide on GitHub for issues.
.TH MAILLOGSENTINEL 8 "2025-06-27" "5.14.13" "MailLogSentinel Manual"

.SH NAME
maillogsentinel \- monitors and analyzes mail server authentication logs for intrusion attempts.

.SH SYNOPSIS
.B maillogsentinel
[\fB\-\-config\fR \fIconfig_file\fR]
[\fB\-\-setup\fR [\fB\-\-interactive\fR | \fB\-\-automated\fR \fIsource_config_file\fR]]
[\fB\-\-report\fR]
[\fB\-\-reset\fR]
[\fB\-\-purge\fR]
[\fB\-\-help\fR]
[\fB\-\-version\fR]

.SH DESCRIPTION
.P
\fBMailLogSentinel\fR is a Python-based tool designed to monitor and analyze SASL (Simple Authentication and Security Layer) authentication logs from Postfix/Dovecot mail servers. Its primary goal is to detect and report potential intrusion attempts by identifying failed login events. It operates using Python 3 and standard libraries, making it lightweight and easy to integrate into existing server environments.
.P
Key functionalities include parsing SASL logs, incremental processing with offset tracking, handling of rotated and gzipped log files, storing detected attempts in a CSV file, performing reverse DNS lookups (with caching) and IP geolocation (Country, ASN, ASO) for source IPs, generating daily email summaries with statistics and CSV attachment, and offering multiple setup modes.

.SH OPTIONS
.TP
\fB\-\-config\fR \fIconfig_file\fR
Specify the path to the configuration file. Defaults to \fI/etc/maillogsentinel.conf\fR.
.TP
\fB\-\-setup\fR [\fB\-\-interactive\fR | \fB\-\-automated\fR \fIsource_config_file\fR]
Run the setup process. Requires root (sudo) privileges. This process is also triggered automatically if the configuration file is not found.
.RS
.TP
\fB\-\-interactive\fR
Run the interactive first-time setup wizard. This mode guides you through the configuration process step-by-step. Recommended for first-time users. Console output is logged to \fBmaillogsentinel_setup.log\fR in the current working directory.
.TP
\fB\-\-automated\fR \fIsource_config_file\fR
Run the automated/silent setup using a pre-configured source file. Useful for deployments. Progress is primarily logged to \fBmaillogsentinel_setup.log\fR.
.RE
.TP
\fB\-\-report\fR
Generate and send the daily email summary report based on the data in the CSV file.
.TP
\fB\-\-reset\fR
Archive existing data (CSV, state file, operational log) to a timestamped backup directory in the user's home directory and reset the log processing offset. The next run will process logs from the beginning.
.TP
\fB\-\-purge\fR
Similar to \fB\-\-reset\fR, but intended for a more complete fresh start by archiving all data.
.TP
\fB\-\-help\fR
Show a help message and exit.
.TP
\fB\-\-version\fR
Show the script's version number and exit.

.SH "PROGRESS DISPLAY"
.TP
\fBSetup Process\fR
.RS
.IP "\(bu" 2
\fBInteractive Setup (\-\-setup \-\-interactive)\fR: Progress messages are printed to the console at each major step. A detailed log is also saved to \fBmaillogsentinel_setup.log\fR in the current working directory.
.IP "\(bu" 2
\fBAutomated Setup (\-\-setup \-\-automated)\fR: Minimal console output. Detailed progress is logged in \fBmaillogsentinel_setup.log\fR.
.RE
.TP
\fBLog Extraction & Reporting\fR
.RS
.IP "\(bu" 2
\fBDirect Execution\fR: Progress and errors are printed to the console based on the configured log level.
.IP "\(bu" 2
\fBSystemd Service\fR: All output (stdout and stderr) is directed to the Systemd journal (view with \fBjournalctl -u maillogsentinel.service\fR or \fBjournalctl -u maillogsentinel-report.service\fR).
.IP "\(bu" 2
\fBOperational Log File\fR: Detailed logs are written to the file specified in the configuration (e.g., \fI<working_dir>/maillogsentinel.log\fR).
.RE

.SH FILES
.TP
\fI/etc/maillogsentinel.conf\fR
The default configuration file.
.TP
\fI<working_dir>/maillogsentinel.csv\fR
CSV file where detected authentication attempts are stored. \fI<working_dir>\fR is defined in the configuration file.
The columns are: \fBserver, date, ip, user, hostname, reverse_dns_status, country_code, asn, aso\fR.
.TP
\fI<working_dir>/maillogsentinel.log\fR
Operational log file for MailLogSentinel. \fI<working_dir>\fR is defined in the configuration file.
.TP
\fI<state_dir>/state.offset\fR
State file that stores the last processed log offset. \fI<state_dir>\fR is defined in the configuration file.
.TP
\fI./maillogsentinel_setup.log\fR
Log file created in the current working directory when \fB\-\-setup\fR is run, containing the transcript of the setup process.

.SH CONFIGURATION
MailLogSentinel is configured via an INI-style file, typically located at \fB/etc/maillogsentinel.conf\fR. The \fB\-\-setup --interactive\fR option is the recommended way to create this file.
.SS "[paths]"
.TP
\fBworking_dir\fR
Directory for CSV output (\fBmaillogsentinel.csv\fR) and the script's operational log (\fBmaillogsentinel.log\fR).
.br
Example: \fI/var/log/maillogsentinel\fR
.TP
\fBstate_dir\fR
Directory for the state file (\fBstate.offset\fR) which tracks the log processing position.
.br
Example: \fI/var/lib/maillogsentinel\fR
.TP
\fBmail_log\fR
Full path to the mail server log file (e.g., Postfix/Dovecot SASL logs).
.br
Example: \fI/var/log/mail.log\fR
.SS "[report]"
.TP
\fBemail\fR
Recipient email address for daily summary reports.
.br
Example: \fIsecurity-alerts@example.com\fR
.SS "[general]"
.TP
\fBlog_level\fR
Logging verbosity for \fBmaillogsentinel.log\fR. Options: DEBUG, INFO, WARNING, ERROR, CRITICAL.
.br
Default: INFO
.SS "[dns_cache]"
.TP
\fBenabled\fR
Enable (`true`) or disable (`false`) DNS reverse lookup caching.
.br
Default: `true`
.TP
\fBsize\fR
Maximum number of DNS entries in the cache.
.br
Default: 128
.TP
\fBttl_seconds\fR
Time-to-live for cached DNS entries, in seconds.
.br
Default: 3600 (1 hour)
.SS "[ipinfo]"
.TP
\fBcountry_db_path\fR
Path to the IP geolocation country database (e.g., GeoLite2-Country.mmdb).
.TP
\fBasn_db_path\fR
Path to the IP geolocation ASN database (e.g., GeoLite2-ASN.mmdb).
.TP
\fBdb_update_url_country\fR
URL to download/update the country database.
.TP
\fBdb_update_url_asn\fR
URL to download/update the ASN database.
.P
(Note: These \fBipinfo\fR settings are typically configured by \fBipinfo.py --update\fR or can be set up if using custom database locations/sources.)


.SH PREREQUISITES
.IP "1." 4
Python 3.6 or newer.
.IP "2." 4
An active Postfix/Dovecot mail server generating SASL authentication logs.
.IP "3." 4
A functional local MTA (e.g., Postfix, Sendmail) for sending email reports.
.IP "4." 4
Appropriate permissions:
.RS 4
.IP \(bu 2
Read access to mail log files for the operational user.
.IP \(bu 2
Write access to \fIworking_dir\fR and \fIstate_dir\fR for the operational user.
.IP \(bu 2
Root (`sudo`) privileges for the \fB\-\-setup\fR command.
.RE

.SH "EMAIL REPORTS"
.P
Triggered by the \fB\-\-report\fR option, daily email reports include:
.IP \(bu 2
Header with MailLogSentinel version, extraction interval, report timestamp, and server details.
.IP \(bu 2
Total failed attempts for the reporting period.
.IP \(bu 2
Top 10 failed authentications (user, IP, hostname, country, number of times).
.IP \(bu 2
Top 10 usernames involved in failed attempts.
.IP \(bu 2
Top 10 countries from which attempts originated.
.IP \(bu 2
Top 10 ASNs (Autonomous System Numbers) associated with source IPs.
.IP \(bu 2
Top 10 ASOs (Autonomous System Organizations) associated with source IPs.
.IP \(bu 2
Summary of reverse DNS lookup failures, broken down by error type.
.IP \(bu 2
Overall CSV file size and total line count.
.IP \(bu 2
The full \fBmaillogsentinel.csv\fR file as an attachment.

.SH "AUTOMATED EXECUTION (SYSTEMD)"
.P
The \fB\-\-setup\fR process (especially \fB\-\-interactive\fR) generates example Systemd unit files:
.IP \(bu 2
\fBmaillogsentinel.service\fR: Runs log extraction.
.IP \(bu 2
\fBmaillogsentinel-extract.timer\fR: Schedules log extraction (e.g., hourly).
.IP \(bu 2
\fBmaillogsentinel-report.service\fR: Runs email reporting.
.IP \(bu 2
\fBmaillogsentinel-report.timer\fR: Schedules email reporting (e.g., daily).
.P
Users must review, customize (especially the `User=` directive and paths), and then deploy these files to \fI/etc/systemd/system/\fR. After deployment, reload Systemd (`sudo systemctl daemon-reload`) and enable/start the timers (`sudo systemctl enable --now maillogsentinel-extract.timer maillogsentinel-report.timer`).

.SH EXAMPLES
.P
1. Run interactive setup (as root):
.EX
sudo maillogsentinel --setup --interactive
.EE
.P
2. Run automated setup using a source configuration file (as root):
.EX
sudo maillogsentinel --setup --automated /path/to/source_maillogsentinel.conf
.EE
.P
3. Process logs using a specific configuration file:
.EX
maillogsentinel --config /opt/custom/maillog.conf
.EE
.P
4. Generate and send the daily email report:
.EX
maillogsentinel --report
.EE
.P
5. Reset log processing state, archiving old data:
.EX
maillogsentinel --reset
.EE

.SH "EXIT STATUS"
.TP
\fB0\fR
Successful execution.
.TP
\fB1\fR
An error occurred (e.g., configuration file not found, permission issues, error during setup). Specific error messages are typically printed to stderr or the script's log file.

.SH AUXILIARY SCRIPTS
.P
MailLogSentinel includes several auxiliary scripts located in the \fBbin/\fR directory of the installation. These scripts provide additional functionalities related to log management and data enrichment.
.SS log_anonymizer.py
.P
A utility script designed to anonymize sensitive data within log files, with a particular focus on Postfix mail logs. This is useful for sharing log excerpts for troubleshooting purposes or for archiving logs while minimizing privacy concerns.
.P
Basic usage:
.EX
\fBbin/log_anonymizer.py\fR \fI<input_log_file>\fR \fI<output_anonymized_log_file>\fR [\fIoptions\fR]
.EE
.P
For more detailed options, refer to the script's help message (\fBbin/log_anonymizer.py --help\fR) or the project's Wiki.
.SS ipinfo.py
.P
A command-line tool and library for looking up IP address geolocation information such as country, ASN (Autonomous System Number), and ASO (Autonomous System Organization). It utilizes local databases which can be downloaded and updated. MailLogSentinel uses this utility for enriching its reports.
.P
The default IP geolocation databases (country and ASN) utilized by \fBipinfo.py\fR are sourced from the \fIsapics/ip-location-db\fR project on GitHub by user 'sapics'. These databases are provided under the Creative Commons Zero (CC0) license. The project can be found at \fIhttps://github.com/sapics/ip-location-db\fR.
.P
Primary command-line operations:
.IP "\(bu" 2
\fBbin/ipinfo.py --update\fR: Downloads or updates the IP geolocation databases. Configuration for database paths and URLs can be managed in \fBmaillogsentinel.conf\fR under the `[ipinfo]` section or overridden by command-line arguments.
.IP "\(bu" 2
\fBbin/ipinfo.py\fR \fI<IP_ADDRESS>\fR: Looks up information for a specific IP address.
.IP "\(bu" 2
\fBbin/ipinfo.py --config\fR \fI<path_to_maillogsentinel.conf>\fR: Explicitly uses database paths and download URLs specified in the MaillogSentinel configuration file for its operations.
.P
Database paths and download URLs can be configured via command-line arguments or by reading settings from \fBmaillogsentinel.conf\fR (see CONFIGURATION section).

.SH AUTHOR
Written by monozoide. See <https://github.com/monozoide/MailLogSentinel>.

.SH "REPORTING BUGS"
Report bugs to the GitHub issues page: <https://github.com/monozoide/MailLogSentinel/issues>.

.SH DOCUMENTATION
.TP
\fBProject Wiki\fR
For full user and administrator documentation, please visit the MailLogSentinel Wiki: <https://github.com/monozoide/MailLogSentinel/wiki>.
.TP
\fBAPI Documentation\fR
For developers, API documentation is available at: <https://monozoide.github.io/MailLogSentinel/api/maillogsentinel.html> (adjust path if served locally from docs/api/maillogsentinel.html).


.SH "SEE ALSO"
.BR fail2ban (1),
.BR rsyslog.conf (5),
.BR syslog-ng.conf (5),
.BR systemd.service (5),
.BR systemd.timer (5),
.BR crontab (5),
.BR ipinfo.py (1) (if installed as a separate command)

.\" END OF MAN PAGE
