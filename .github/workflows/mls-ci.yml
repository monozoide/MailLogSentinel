name: MLS ci

on:
  pull_request:
    branches: [ main, dev ]
  push:
    branches: [ main, dev ]

permissions:
  contents: read

jobs:
  changes:
    name: detect-changes
    runs-on: ubuntu-latest
    outputs:
      code_changed: ${{ steps.filter.outputs.code }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            code:
              - '!docs/**'
              - '!**/*.md'
              - '!**/*.mdx'
              - '!**/*.png'
              - '!**/*.jpg'
              - '!**/*.jpeg'
              - '!**/*.gif'
              - '!**/*.svg'
              - '!**/*.yaml'
              - '!**/*.yml'
              - '**'

  lint:
    name: lint
    runs-on: ubuntu-latest
    needs: changes
    if: needs.changes.outputs.code_changed == 'true'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.9'
          cache: 'pip'
      - run: python -m pip install --upgrade pip
      - run: |
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install flake8
      - name: flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82,F821,F823,F824 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  tests:
    name: tests
    runs-on: ubuntu-latest
    needs: changes
    if: needs.changes.outputs.code_changed == 'true'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.9'
          cache: 'pip'
      - run: python -m pip install --upgrade pip
      - run: |
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install pytest
      - name: pytest
        run: |
          export PYTHONPATH=$PYTHONPATH:.
          pytest --maxfail=1 --disable-warnings -q

  docs-only:
    name: docs-only fast-path
    runs-on: ubuntu-latest
    needs: changes
    if: needs.changes.outputs.code_changed != 'true'
    steps:
      - run: echo "Docs-only change → skipping lint/tests ✅"
